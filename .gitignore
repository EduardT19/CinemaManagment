# Создано с помощью https://www.toptal.com/developers/gitignore/api/python,pycharm
# Отредактируйте на https://www.toptal.com/developers/gitignore?templates=python,pycharm

### PyCharm ###
# Подходит для IDE JetBrains: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm и Rider
# Ссылка: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839

# Пользовательские настройки
.idea/**/workspace.xml
.idea/**/tasks.xml
.idea/**/usage.statistics.xml
.idea/**/dictionaries
.idea/**/shelf

# Пользовательские настройки AWS
.idea/**/aws.xml

# Сгенерированные файлы
.idea/**/contentModel.xml

# Конфиденциальные файлы или файлы с высокой частотой обращения
.idea/**/dataSources/
.idea/**/dataSources.ids
.idea/**/dataSources.local.xml
.idea/**/sqlDataSources.xml
.idea/**/dynamic.xml
.idea/**/uiDesigner.xml
.idea/**/dbnavigator.xml

# Gradle
.idea/**/gradle.xml
.idea/**/libraries

# Gradle и Maven с автоматическим импортом
# При использовании Gradle или Maven с автоматическим импортом вам следует исключить файлы модуля,
# поскольку они будут создаваться заново и могут вызвать отток. Раскомментируйте, если используете
# автоматический импорт.
# .идея / артефакты
# .idea/compiler.xml
# .idea/jarRepositories.xml
# .idea/modules.xml
# .идея / *.iml
# .идея / модули
# *.iml
# *.ipr

# CMake
cmake-build-*/

# Плагин Mongo Explorer
.idea/**/mongoSettings.xml

# Формат проекта на основе файлов
*.iws

# IntelliJ
out/

# Плагин mpeltonen/sbt-idea
.idea_modules/

# Плагин JIRA
atlassian-ide-plugin.xml

# Плагин Cursive Clojure
.idea/replstate.xml

# Плагин SonarLint
.idea/sonarlint/

# Плагин Crashlytics (для Android Studio и IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties
fabric.properties

# Клиент Rest на основе редактора
.idea/httpRequests

# Сериализованный файл кэша Android Studio 3.1+
.idea/caches/build_file_checksums.ser

### Патч для PyCharm ###
# Комментарий: https://github.com/joeblau/gitignore.io/issues/186#issuecomment-215987721
# *.iml
# modules.xml
# .idea/misc.xml
# *.ipr

# Плагин Sonarlint
# https://plugins.jetbrains.com/plugin/7973-sonarlint
.idea/**/sonarlint/

# Плагин SonarQube
# https://plugins.jetbrains.com/plugin/7238-sonarqube-community-plugin
.idea/**/sonarIssues.xml

# Плагин Markdown Navigator
# https://plugins.jetbrains.com/plugin/7896-markdown-navigator-enhanced
.idea/**/markdown-navigator.xml
.idea/**/markdown-navigator-enh.xml
.idea/**/markdown-navigator/

# Ошибка при создании файла кэша
# См. https://youtrack.jetbrains.com/issue/JBR-2257
.idea/$CACHE_FILE$

# Плагин CodeStream
# https://plugins.jetbrains.com/plugin/12206-codestream
.idea/codestream.xml

# Плагин Azure Toolkit для IntelliJ
# https://plugins.jetbrains.com/plugin/8053-azure-toolkit-for-intellij
.idea/**/azureSettings.xml

### Python ###
# Байт-компилированные / оптимизированные / DLL-файлы
__pycache__/
*.py[cod]
*$py.class

# Расширения C
*.so

# Распространение / упаковка
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
# Обычно эти файлы создаются скриптом Python на основе шаблона
# перед тем, как PyInstaller соберет исполняемый файл, чтобы добавить в него дату и другую информацию.
*.manifest
*.spec

# Журналы установки
pip-log.txt
pip-delete-this-directory.txt

# Отчеты о модульных тестах / покрытии кода
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Переводы
*.mo
*.pot

# Django:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask:
instance/
.webassets-cache

# Scrapy:
.scrapy

# Документация Sphinx
документы/_build/

# PyBuilder
.pybuilder/
цель/

# Записная книжка Jupyter
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
# Для библиотеки или пакета вы можете проигнорировать эти файлы, поскольку код
# предназначен для запуска в нескольких средах; в противном случае проверьте их в:
# .python-версия

# pipenv
# Согласно pypa / pipenv # 598, рекомендуется включить Pipfile .заблокировать систему управления версиями.
# Однако, в случае совместной работы, при наличии зависимостей, зависящих от платформы, или зависимостей
# не имея кроссплатформенной поддержки, pipenv может устанавливать зависимости, которые не работают, или нет.
# установите все необходимые зависимости.
#Pipfile.блокировка

# поэзия
# Аналогично Pipfile.кроме того, обычно рекомендуется включать стихи.блокировка в системе управления версиями.
# Это особенно рекомендуется для двоичных пакетов для обеспечения воспроизводимости и чаще всего
# обычно игнорируется для библиотек.
# https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#поэзия.блокировка

# pdm
# Аналогично Pipfile.lock, обычно рекомендуется включать pdm.lock в систему управления версиями.
#pdm.lock
# pdm хранит общесистемные конфигурации в файле .pdm.toml, но рекомендуется не включать его
# в систему контроля версий.
# https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; используется, например, на github.com/David-OConnor/pyflow и github.com/pdm-project/pdm
__pypackages__/

# Файлы Celery
celerybeat-schedule
celerybeat.pid

# Файлы, обработанные SageMath
*.sage.py

# Среды
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Настройки проекта Spyder
.spyderproject
.spyproject

# Настройки проекта Rope
.ropeproject

# Документация mkdocs
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Средство проверки типов Pyre
.pyre/

# Статический анализатор типов pytype
.pytype/

# Отладочные символы Cython
cython_debug/

# PyCharm
# Шаблон JetBrains хранится в отдельном файле JetBrains.gitignore, который можно
# можно найти по адресу https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
# и добавить в глобальный файл gitignore или объединить с этим файлом. Для более радикального
# варианта (не рекомендуется) можно раскомментировать следующую строку, чтобы игнорировать всю папку idea.
.idea/

### Исправление для Python ###
# Файл локальной конфигурации Poetry — https://python-poetry.org/docs/configuration/#local-configuration
poetry.toml

# ruff
.ruff_cache/

# файлы конфигурации LSP
pyrightconfig.json

# конец https://www.toptal.com/developers/gitignore/api/python,pycharm